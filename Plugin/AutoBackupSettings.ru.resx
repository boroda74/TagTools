<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="autoBackupFolderTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>161, 8</value>
  </data>
  <data name="autoBackupFolderTextBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>700, 23</value>
  </data>
  <data name="buttonBrowse.Location" type="System.Drawing.Point, System.Drawing">
    <value>869, 8</value>
  </data>
  <data name="buttonBrowse.Text" xml:space="preserve">
    <value>Просмотр...</value>
  </data>
  <data name="autoBackupFolderLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>166, 15</value>
  </data>
  <data name="autoBackupFolderLabel.Text" xml:space="preserve">
    <value>Папка авто-резервирования:</value>
  </data>
  <data name="autoBackupPrefixLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>367, 15</value>
  </data>
  <data name="autoBackupPrefixLabel.Text" xml:space="preserve">
    <value>    Префикс имен файлов для автоматически созданных архивов:</value>
  </data>
  <data name="autoBackupPrefixTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>720, 37</value>
  </data>
  <data name="autoBackupPrefixTextBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>249, 23</value>
  </data>
  <data name="autoBackupCheckBox.ToolTip" xml:space="preserve">
    <value>Авто-архивирование будет пропущено, если содержание текущей библиотеки и какие-либо теги 
не изменились с момента последнего ручного или автоматического архивирования. </value>
  </data>
  <data name="autoBackupNumericUpDown.Location" type="System.Drawing.Point, System.Drawing">
    <value>184, 37</value>
  </data>
  <data name="autoBackupPeriodLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>298, 40</value>
  </data>
  <data name="autoBackupPeriodLabel.Text" xml:space="preserve">
    <value>дней.</value>
  </data>
  <data name="autoDeleteOldCheckBox.ToolTip" xml:space="preserve">
    <value>Только автоматические архивы текущей библиотеки будут удаляться</value>
  </data>
  <data name="autoDeleteManyCheckBox.ToolTip" xml:space="preserve">
    <value>Только автоматические архивы текущей библиотеки будут удаляться</value>
  </data>
  <data name="numberOfFilesNumericUpDown.Location" type="System.Drawing.Point, System.Drawing">
    <value>503, 93</value>
  </data>
  <data name="autoDeleteOldLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>44, 15</value>
  </data>
  <data name="autoDeleteOldLabel.Text" xml:space="preserve">
    <value>минут.</value>
  </data>
  <data name="buttonClose.Location" type="System.Drawing.Point, System.Drawing">
    <value>869, 181</value>
  </data>
  <data name="buttonClose.Text" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="buttonOK.Location" type="System.Drawing.Point, System.Drawing">
    <value>761, 181</value>
  </data>
  <data name="backupArtworksCheckBox.ToolTip" xml:space="preserve">
    <value>ВНИМАНИЕ! Эта опция затрагивает, как ручное, так и автоматическое архивирование.</value>
  </data>
  <data name="dontTryToGuessLibraryNameCheckBox.ToolTip" xml:space="preserve">
    <value>ВНИМАНИЕ! Эта опция затрагивает, как ручное, так и автоматическое архивирование.
Иногда предположение названия библиотеки работает некорректно.</value>
  </data>
  <data name="autoBackupCheckBoxLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>144, 15</value>
  </data>
  <data name="autoBackupCheckBoxLabel.Text" xml:space="preserve">
    <value>Авто-архивация каждые:</value>
  </data>
  <data name="autoBackupCheckBoxLabel.ToolTip" xml:space="preserve">
    <value>Авто-архивирование будет пропущено, если содержание текущей библиотеки и какие-либо теги 
не изменилсь с момента последнего ручного или автоматического архивирования. 
</value>
  </data>
  <data name="autoDeleteOldCheckBoxLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>228, 15</value>
  </data>
  <data name="autoDeleteOldCheckBoxLabel.Text" xml:space="preserve">
    <value>Автоматически удалять архивы старше:</value>
  </data>
  <data name="autoDeleteOldCheckBoxLabel.ToolTip" xml:space="preserve">
    <value>Только автоматические архивы текущей библиотеки будут удаляться</value>
  </data>
  <data name="autoDeleteManyCheckBoxLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>458, 15</value>
  </data>
  <data name="autoDeleteManyCheckBoxLabel.Text" xml:space="preserve">
    <value>Автоматически удалять старые архивы, если общее архивов число больше, чем:</value>
  </data>
  <data name="autoDeleteManyCheckBoxLabel.ToolTip" xml:space="preserve">
    <value>Только автоматические архивы текущей библиотеки будут удаляться</value>
  </data>
  <data name="dontTryToGuessLibraryNameCheckBoxLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>275, 15</value>
  </data>
  <data name="dontTryToGuessLibraryNameCheckBoxLabel.Text" xml:space="preserve">
    <value>Не пытаться предполагать название библиотеки</value>
  </data>
  <data name="dontTryToGuessLibraryNameCheckBoxLabel.ToolTip" xml:space="preserve">
    <value>ВНИМАНИЕ! Эта опция затрагивает, как ручное, так и автоматическое архивирование.
Иногда предположение названия библиотеки работает некорректно.
</value>
  </data>
  <data name="backupArtworksCheckBoxLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>306, 15</value>
  </data>
  <data name="backupArtworksCheckBoxLabel.Text" xml:space="preserve">
    <value>Архивировать обложки альбомов (не рекомендуется)</value>
  </data>
  <data name="backupArtworksCheckBoxLabel.ToolTip" xml:space="preserve">
    <value>ВНИМАНИЕ! Эта опция затрагивает, как ручное, так и автоматическое архивирование.</value>
  </data>
  <data name="storeTrackIdsInCustomTagCheckBoxLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>442, 157</value>
  </data>
  <data name="storeTrackIdsInCustomTagCheckBoxLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>350, 15</value>
  </data>
  <data name="storeTrackIdsInCustomTagCheckBoxLabel.Text" xml:space="preserve">
    <value>Использовать свой тег для хранения идентификаторов треков</value>
  </data>
  <data name="storeTrackIdsInCustomTagCheckBoxLabel.ToolTip" xml:space="preserve">
    <value>Архивация/восстановление тегов основано на внутренних идентификаторах треков 
MusicBee, зависящих от библиотеки. По этой причине вы не можете восстановить теги 
в библиотеку, отличную от той, из которой были созданы резервные копии тегов. Если 
вы отметите эту опцию, плагин сохранит копию идентификаторов треков в выбранном вами 
своем теге и будет восстанавливать резервные копии тегов, используя этот тег для идентификации 
треков вместо фактических идентификаторов треков.

Это позволит вам восстановить теги в новую библиотеку, содержащую те же треки, если вы воссоздавали 
библиотеку заново, например, на другом компьютере.

Убедитесь, что этот свой тег хранится в теге файла, а не в базе данных MusicBee.</value>
  </data>
  <data name="storeTrackIdsInCustomTagCheckBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>415, 157</value>
  </data>
  <data name="storeTrackIdsInCustomTagCheckBox.ToolTip" xml:space="preserve">
    <value>Архивация/восстановление тегов основано на внутренних идентификаторах треков 
MusicBee, зависящих от библиотеки. По этой причине вы не можете восстановить теги 
в библиотеку, отличную от той, из которой были созданы резервные копии тегов. Если 
вы отметите эту опцию, плагин сохранит копию идентификаторов треков в выбранном вами 
своем теге и будет восстанавливать резервные копии тегов, используя этот тег для идентификации 
треков вместо фактических идентификаторов треков.

Это позволит вам восстановить теги в новую библиотеку, содержащую те же треки, если вы воссоздавали 
библиотеку заново, например, на другом компьютере.

Убедитесь, что этот свой тег хранится в теге файла, а не в базе данных MusicBee.</value>
  </data>
  <data name="trackIdTagList.Location" type="System.Drawing.Point, System.Drawing">
    <value>804, 154</value>
  </data>
  <data name="trackIdTagList.Size" type="System.Drawing.Size, System.Drawing">
    <value>165, 23</value>
  </data>
  <data name="trackIdTagList.ToolTip" xml:space="preserve">
    <value>Архивация/восстановление тегов основано на внутренних идентификаторах треков 
MusicBee, зависящих от библиотеки. По этой причине вы не можете восстановить теги 
в библиотеку, отличную от той, из которой были созданы резервные копии тегов. Если 
вы отметите эту опцию, плагин сохранит копию идентификаторов треков в выбранном вами 
своем теге и будет восстанавливать резервные копии тегов, используя этот тег для идентификации 
треков вместо фактических идентификаторов треков.

Это позволит вам восстановить теги в новую библиотеку, содержащую те же треки, если вы воссоздавали 
библиотеку заново, например, на другом компьютере.

Убедитесь, что этот свой тег хранится в теге файла, а не в базе данных MusicBee.</value>
  </data>
  <data name="dontSkipAutoBackupsIfPlayCountsChangedLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>581, 15</value>
  </data>
  <data name="dontSkipAutoBackupsIfPlayCountsChangedLabel.Text" xml:space="preserve">
    <value>Не пропускать авто-архивирование, даже если изменились только счетчики проигрываний/пропусков</value>
  </data>
  <data name="groupBox1.Size" type="System.Drawing.Size, System.Drawing">
    <value>958, 4</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>979, 214</value>
  </data>
  <data name="$this.MinimumSize" type="System.Drawing.Size, System.Drawing">
    <value>915, 251</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Настройки (авто)архивации</value>
  </data>
</root>